2018-12-14 15:22:41 [main] DEBUG main.LogParser - LogParser configDbName:dbbhsconf,logDbName:dbbhsyylog
2018-12-14 15:22:41 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 15:22:41 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 15:22:41 [main] DEBUG main.LogParser - getConnection e.getMessage():Unknown database 'dbbhsconf'
2018-12-14 15:22:41 [main] DEBUG main.LogParser - loadPlatInfoFromDb e.getMessage():null
2018-12-14 15:23:03 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 15:23:03 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 15:23:03 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 15:23:03 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 15:23:03 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vClientIp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iCost
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iShopType
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsType
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsNum
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vGuid
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iNewCash
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vOperate
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vGoodsName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iCount
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iTotalCount
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iIdentifier
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleLevel
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vSN
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):ts
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iPayDelta
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iNewCash
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vSubType
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vClientIp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleLevel
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleExp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoney
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLijin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGamePoints
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtCreateTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iOnlineTotalTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iReason
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vClientIp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleLevel
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoneyBeforer
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoneyAfter
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoney
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoneyType
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iAction
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtLoginTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vClientIp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtCreateTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iOnlineTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iOnlineTotalTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleLevel
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleExp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoney
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLijin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGamePoints
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vClientIp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleLevel
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleExp
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iMoney
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLijin
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGamePoints
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtCreateTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iOnlineTotalTime
2018-12-14 15:23:03 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:23:03 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:24:00 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 15:24:00 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 15:24:00 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 15:24:00 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 15:24:00 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iEventId
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iWorldId
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iUin
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):dtEventTime
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iRoleId
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vClientIp
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vRoleName
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iJobId
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iCost
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iShopType
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsType
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsId
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iGoodsNum
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):vGuid
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iLoginWay
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb field.fieldName,map.get(field.fieldName):iNewCash
2018-12-14 15:31:34 [main] DEBUG main.LogParser - 找不到字段tryCreateLogDb field.fieldName:dt
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 15:31:34 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:382)
	at main.LogParser.<init>(LogParser.java:137)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:06:01 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:06:01 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:06:01 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:06:01 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:06:01 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsNum', type='uint', size=0, desc='物品数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsNum', type='INT', size=10, desc='物品数量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsId', type='uint', size=0, desc='物品ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsId', type='INT', size=10, desc='物品ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iNewCash', type='bigint', size=0, desc='钻石余量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iNewCash', type='BIGINT', size=19, desc='钻石余量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iShopType', type='utinyint', size=0, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iShopType', type='TINYINT', size=3, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iCost', type='bigint', size=0, desc='支付消耗'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iCost', type='BIGINT', size=19, desc='支付消耗'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsType', type='uint', size=0, desc='商品类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsType', type='INT', size=10, desc='商品类型'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vGuid', type='string', size=60, desc='全局唯一标识(暂时没用,空着)'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vGuid', type='VARCHAR', size=60, desc='全局唯一标识(暂时没用,空着)'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vGoodsName', type='string', size=60, desc='物品名字'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vGoodsName', type='VARCHAR', size=60, desc='物品名字'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsId', type='uint', size=0, desc='物品id'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsId', type='INT', size=10, desc='物品id'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='操作ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='操作ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=60, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=60, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iTotalCount', type='uint', size=0, desc='动作后的道具总个数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iTotalCount', type='INT', size=10, desc='动作后的道具总个数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vOperate', type='string', size=60, desc='操作类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vOperate', type='VARCHAR', size=60, desc='操作类型'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iIdentifier', type='uint', size=0, desc='标识 1是得到，2是失去'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iIdentifier', type='INT', size=10, desc='标识 1是得到，2是失去'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iCount', type='uint', size=0, desc='个数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iCount', type='INT', size=10, desc='个数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='操作ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='操作ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vSubType', type='string', size=64, desc='子类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vSubType', type='VARCHAR', size=64, desc='子类型'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iPayDelta', type='uint', size=0, desc='充值金额'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iPayDelta', type='INT', size=10, desc='充值金额'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iNewCash', type='bigint', size=0, desc='元宝余量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iNewCash', type='BIGINT', size=19, desc='元宝余量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vSN', type='string', size=64, desc='流水号'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vSN', type='VARCHAR', size=64, desc='流水号'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='ts', type='uint', size=0, desc='充值时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='ts', type='INT', size=10, desc='充值时间'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=0, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtCreateTime', type='datetime', size=0, desc='角色创建的时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtCreateTime', type='DATETIME', size=19, desc='角色创建的时间'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='uint', size=0, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iReason', type='uint', size=0, desc='升级原因'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iReason', type='INT', size=10, desc='升级原因'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=0, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=0, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyAfter', type='bigint', size=0, desc='动作后的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyAfter', type='BIGINT', size=19, desc='动作后的金钱数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyBeforer', type='bigint', size=0, desc='动作前的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyBeforer', type='BIGINT', size=19, desc='动作前的金钱数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='动作涉及的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='动作涉及的金钱数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iAction', type='uint', size=0, desc='动作,发生原因'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iAction', type='INT', size=10, desc='动作,发生原因'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyType', type='uint', size=0, desc='金钱的类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyType', type='INT', size=10, desc='金钱的类型'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=0, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtCreateTime', type='datetime', size=0, desc='角色创建的时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtCreateTime', type='DATETIME', size=19, desc='角色创建的时间'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTime', type='uint', size=0, desc='本次登录在线时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTime', type='INT', size=10, desc='本次登录在线时间'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtLoginTime', type='datetime', size=0, desc='登录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtLoginTime', type='DATETIME', size=19, desc='登录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='uint', size=0, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=0, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=0, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=0, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtCreateTime', type='datetime', size=0, desc='角色创建的时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtCreateTime', type='DATETIME', size=19, desc='角色创建的时间'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='uint', size=0, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=0, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:06:02 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=0, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:08:18 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:08:18 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:08:18 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:08:18 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:08:18 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsNum', type='uint', size=0, desc='物品数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsNum', type='INT', size=10, desc='物品数量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsId', type='uint', size=0, desc='物品ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsId', type='INT', size=10, desc='物品ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iNewCash', type='bigint', size=0, desc='钻石余量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iNewCash', type='BIGINT', size=19, desc='钻石余量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iShopType', type='utinyint', size=0, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iShopType', type='TINYINT', size=3, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iCost', type='bigint', size=0, desc='支付消耗'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iCost', type='BIGINT', size=19, desc='支付消耗'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsType', type='uint', size=0, desc='商品类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsType', type='INT', size=10, desc='商品类型'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vGuid', type='string', size=60, desc='全局唯一标识(暂时没用,空着)'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vGuid', type='VARCHAR', size=60, desc='全局唯一标识(暂时没用,空着)'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vGoodsName', type='string', size=60, desc='物品名字'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vGoodsName', type='VARCHAR', size=60, desc='物品名字'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsId', type='uint', size=0, desc='物品id'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsId', type='INT', size=10, desc='物品id'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='操作ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='操作ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=60, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=60, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iTotalCount', type='uint', size=0, desc='动作后的道具总个数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iTotalCount', type='INT', size=10, desc='动作后的道具总个数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vOperate', type='string', size=60, desc='操作类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vOperate', type='VARCHAR', size=60, desc='操作类型'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iIdentifier', type='uint', size=0, desc='标识 1是得到，2是失去'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iIdentifier', type='INT', size=10, desc='标识 1是得到，2是失去'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iCount', type='uint', size=0, desc='个数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iCount', type='INT', size=10, desc='个数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='操作ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='操作ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vSubType', type='string', size=64, desc='子类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vSubType', type='VARCHAR', size=64, desc='子类型'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iPayDelta', type='uint', size=0, desc='充值金额'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iPayDelta', type='INT', size=10, desc='充值金额'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iNewCash', type='bigint', size=0, desc='元宝余量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iNewCash', type='BIGINT', size=19, desc='元宝余量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vSN', type='string', size=64, desc='流水号'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vSN', type='VARCHAR', size=64, desc='流水号'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='ts', type='uint', size=0, desc='充值时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='ts', type='INT', size=10, desc='充值时间'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=0, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtCreateTime', type='datetime', size=0, desc='角色创建的时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtCreateTime', type='DATETIME', size=19, desc='角色创建的时间'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='uint', size=0, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iReason', type='uint', size=0, desc='升级原因'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iReason', type='INT', size=10, desc='升级原因'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=0, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=0, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyAfter', type='bigint', size=0, desc='动作后的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyAfter', type='BIGINT', size=19, desc='动作后的金钱数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyBeforer', type='bigint', size=0, desc='动作前的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyBeforer', type='BIGINT', size=19, desc='动作前的金钱数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='动作涉及的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='动作涉及的金钱数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iAction', type='uint', size=0, desc='动作,发生原因'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iAction', type='INT', size=10, desc='动作,发生原因'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyType', type='uint', size=0, desc='金钱的类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyType', type='INT', size=10, desc='金钱的类型'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=0, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtCreateTime', type='datetime', size=0, desc='角色创建的时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtCreateTime', type='DATETIME', size=19, desc='角色创建的时间'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTime', type='uint', size=0, desc='本次登录在线时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTime', type='INT', size=10, desc='本次登录在线时间'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtLoginTime', type='datetime', size=0, desc='登录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtLoginTime', type='DATETIME', size=19, desc='登录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='uint', size=0, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=0, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=0, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iUin', type='string', size=60, desc='用户ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iUin', type='VARCHAR', size=60, desc='用户ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vClientIp', type='string', size=16, desc='客户端所在ip'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vClientIp', type='VARCHAR', size=16, desc='客户端所在ip'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='uint', size=0, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='string', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=0, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='vRoleName', type='string', size=20, desc='角色名'}, dbTableFields.get(tf.getKey()):TableField{fieldName='vRoleName', type='VARCHAR', size=20, desc='角色名'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=0, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtCreateTime', type='datetime', size=0, desc='角色创建的时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtCreateTime', type='DATETIME', size=19, desc='角色创建的时间'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=0, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='uint', size=0, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='uint', size=0, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='uint', size=0, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='dtEventTime', type='datetime', size=0, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}, dbTableFields.get(tf.getKey()):TableField{fieldName='dtEventTime', type='DATETIME', size=19, desc='记录时间, 格式 YYYY-MM-DD HH:MM:SS'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=0, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='utinyint', size=0, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:08:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=0, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:17:51 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:17:51 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:17:51 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:17:51 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:17:51 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iWorldId` int(11) COMM' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`dtLoginTime` datetime(' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:17:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:07 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:19:07 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:19:07 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:19:07 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:19:07 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iWorldId` int(11) COMM' at line 3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`dtLoginTime` datetime(' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:08 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(19) COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) CO' at line 5
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:19:55 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:19:55 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:19:55 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:19:55 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iCost` bigint(20) COMMENT '支付消耗',
' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 14
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 15
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iLoginWay` int(11) COMMENT '登录渠道',' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 8
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 13
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:19:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:22:03 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:22:03 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:22:03 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:22:03 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:22:03 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:23:55 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:989)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:975)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:920)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:464)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:799)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:09 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:24:09 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:24:09 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:24:10 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:24:10 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iCost` bigint(20) COMMENT '支付消耗',
' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 14
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 15
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iLoginWay` int(11) COMMENT '登录渠道',' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 8
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 13
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:18 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:29 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:24:29 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:24:29 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:24:30 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:24:30 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:24:30 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `shop` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` utinyint(11) COMMENT '角色职业',
`iCost` bigint(20) COMMENT '支付消耗',
`iShopType` utinyint(11) COMMENT '商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等',
`iGoodsType` int(11) COMMENT '商品类型',
`iGoodsId` int(11) COMMENT '物品ID',
`iGoodsNum` int(11) COMMENT '物品数量',
`vGuid` varchar(60) COMMENT '全局唯一标识(暂时没用,空着)',
`iLoginWay` int(11) COMMENT '登录渠道',
`iNewCash` bigint(20) COMMENT '钻石余量',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iCost` bigint(20) COMMENT '支付消耗',
' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `goodsflow` (
`iEventId` varchar(60) COMMENT '操作ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(60) COMMENT '角色名',
`vOperate` varchar(60) COMMENT '操作类型',
`iGoodsId` int(11) COMMENT '物品id',
`vGoodsName` varchar(60) COMMENT '物品名字',
`iCount` int(11) COMMENT '个数',
`iTotalCount` int(11) COMMENT '动作后的道具总个数',
`iIdentifier` int(11) COMMENT '标识 1是得到，2是失去',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 14
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `recharge` (
`iEventId` varchar(60) COMMENT '操作ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iRoleLevel` int(11) COMMENT '角色等级',
`vSN` varchar(64) COMMENT '流水号',
`ts` int(11) COMMENT '充值时间',
`iPayDelta` int(11) COMMENT '充值金额',
`iNewCash` bigint(20) COMMENT '元宝余量',
`vSubType` varchar(64) COMMENT '子类型',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 15
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelevelup` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`iReason` int(11) COMMENT '升级原因',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `createrole` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` utinyint(11) COMMENT '角色职业',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iLoginWay` int(11) COMMENT '登录渠道',' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `moneyflow` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iMoneyBeforer` bigint(20) COMMENT '动作前的金钱数',
`iMoneyAfter` bigint(20) COMMENT '动作后的金钱数',
`iMoney` bigint(20) COMMENT '动作涉及的金钱数',
`iMoneyType` int(11) COMMENT '金钱的类型',
`iAction` int(11) COMMENT '动作,发生原因',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 8
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogout` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`dtLoginTime` datetime COMMENT '登录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTime` int(11) COMMENT '本次登录在线时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 13
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogin` (
`iEventId` varchar(61) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:24:33 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级'' at line 9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:26:04 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:26:04 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:26:04 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:26:04 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `shop` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iCost` bigint(20) COMMENT '支付消耗',
`iShopType` tinyint(11) COMMENT '商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等',
`iGoodsType` int(11) COMMENT '商品类型',
`iGoodsId` int(11) COMMENT '物品ID',
`iGoodsNum` int(11) COMMENT '物品数量',
`vGuid` varchar(60) COMMENT '全局唯一标识(暂时没用,空着)',
`iLoginWay` int(11) COMMENT '登录渠道',
`iNewCash` bigint(20) COMMENT '钻石余量',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 18
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `goodsflow` (
`iEventId` varchar(60) COMMENT '操作ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(60) COMMENT '角色名',
`vOperate` varchar(60) COMMENT '操作类型',
`iGoodsId` int(11) COMMENT '物品id',
`vGoodsName` varchar(60) COMMENT '物品名字',
`iCount` int(11) COMMENT '个数',
`iTotalCount` int(11) COMMENT '动作后的道具总个数',
`iIdentifier` int(11) COMMENT '标识 1是得到，2是失去',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 14
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `recharge` (
`iEventId` varchar(60) COMMENT '操作ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iRoleLevel` int(11) COMMENT '角色等级',
`vSN` varchar(64) COMMENT '流水号',
`ts` int(11) COMMENT '充值时间',
`iPayDelta` int(11) COMMENT '充值金额',
`iNewCash` bigint(20) COMMENT '元宝余量',
`vSubType` varchar(64) COMMENT '子类型',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 15
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelevelup` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`iReason` int(11) COMMENT '升级原因',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 19
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `createrole` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 11
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `moneyflow` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iMoneyBeforer` bigint(20) COMMENT '动作前的金钱数',
`iMoneyAfter` bigint(20) COMMENT '动作后的金钱数',
`iMoney` bigint(20) COMMENT '动作涉及的金钱数',
`iMoneyType` int(11) COMMENT '金钱的类型',
`iAction` int(11) COMMENT '动作,发生原因',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 15
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogout` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`dtLoginTime` datetime COMMENT '登录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTime` int(11) COMMENT '本次登录在线时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 20
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogin` (
`iEventId` varchar(61) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:26:04 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'string(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8' at line 18
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:949)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:795)
	at main.LogParser.tryCreateLogDb(LogParser.java:384)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:26:47 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:26:48 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:26:48 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:26:48 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:26:48 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:27:27 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:27:27 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:27:27 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:27:27 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:27:27 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:27:52 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:27:52 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:27:52 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:27:52 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:27:52 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:29:18 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:29:19 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:29:19 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:29:19 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:29:19 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `shop` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iCost` bigint(20) COMMENT '支付消耗',
`iShopType` tinyint(11) COMMENT '商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等',
`iGoodsType` int(11) COMMENT '商品类型',
`iGoodsId` int(11) COMMENT '物品ID',
`iGoodsNum` int(11) COMMENT '物品数量',
`vGuid` varchar(60) COMMENT '全局唯一标识(暂时没用,空着)',
`iLoginWay` int(11) COMMENT '登录渠道',
`iNewCash` bigint(20) COMMENT '钻石余量',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsNum', type='int', size=11, desc='物品数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsNum', type='INT', size=10, desc='物品数量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsId', type='int', size=11, desc='物品ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsId', type='INT', size=10, desc='物品ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iNewCash', type='bigint', size=20, desc='钻石余量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iNewCash', type='BIGINT', size=19, desc='钻石余量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iShopType', type='tinyint', size=11, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iShopType', type='TINYINT', size=3, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iCost', type='bigint', size=20, desc='支付消耗'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iCost', type='BIGINT', size=19, desc='支付消耗'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='int', size=11, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsType', type='int', size=11, desc='商品类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsType', type='INT', size=10, desc='商品类型'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `goodsflow` (
`iEventId` varchar(60) COMMENT '操作ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(60) COMMENT '角色名',
`vOperate` varchar(60) COMMENT '操作类型',
`iGoodsId` int(11) COMMENT '物品id',
`vGoodsName` varchar(60) COMMENT '物品名字',
`iCount` int(11) COMMENT '个数',
`iTotalCount` int(11) COMMENT '动作后的道具总个数',
`iIdentifier` int(11) COMMENT '标识 1是得到，2是失去',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGoodsId', type='int', size=11, desc='物品id'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGoodsId', type='INT', size=10, desc='物品id'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iTotalCount', type='int', size=11, desc='动作后的道具总个数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iTotalCount', type='INT', size=10, desc='动作后的道具总个数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iIdentifier', type='int', size=11, desc='标识 1是得到，2是失去'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iIdentifier', type='INT', size=10, desc='标识 1是得到，2是失去'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iCount', type='int', size=11, desc='个数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iCount', type='INT', size=10, desc='个数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `recharge` (
`iEventId` varchar(60) COMMENT '操作ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iRoleLevel` int(11) COMMENT '角色等级',
`vSN` varchar(64) COMMENT '流水号',
`ts` int(11) COMMENT '充值时间',
`iPayDelta` int(11) COMMENT '充值金额',
`iNewCash` bigint(20) COMMENT '元宝余量',
`vSubType` varchar(64) COMMENT '子类型',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='int', size=11, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iPayDelta', type='int', size=11, desc='充值金额'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iPayDelta', type='INT', size=10, desc='充值金额'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iNewCash', type='bigint', size=20, desc='元宝余量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iNewCash', type='BIGINT', size=19, desc='元宝余量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='int', size=11, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='ts', type='int', size=11, desc='充值时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='ts', type='INT', size=10, desc='充值时间'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelevelup` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`iReason` int(11) COMMENT '升级原因',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='int', size=11, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=20, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=20, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='int', size=11, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='int', size=11, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iReason', type='int', size=11, desc='升级原因'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iReason', type='INT', size=10, desc='升级原因'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=20, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=20, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `createrole` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='int', size=11, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `moneyflow` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iMoneyBeforer` bigint(20) COMMENT '动作前的金钱数',
`iMoneyAfter` bigint(20) COMMENT '动作后的金钱数',
`iMoney` bigint(20) COMMENT '动作涉及的金钱数',
`iMoneyType` int(11) COMMENT '金钱的类型',
`iAction` int(11) COMMENT '动作,发生原因',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyAfter', type='bigint', size=20, desc='动作后的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyAfter', type='BIGINT', size=19, desc='动作后的金钱数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='int', size=11, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyBeforer', type='bigint', size=20, desc='动作前的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyBeforer', type='BIGINT', size=19, desc='动作前的金钱数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=20, desc='动作涉及的金钱数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='动作涉及的金钱数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iAction', type='int', size=11, desc='动作,发生原因'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iAction', type='INT', size=10, desc='动作,发生原因'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoneyType', type='int', size=11, desc='金钱的类型'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoneyType', type='INT', size=10, desc='金钱的类型'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogout` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`dtLoginTime` datetime COMMENT '登录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTime` int(11) COMMENT '本次登录在线时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='int', size=11, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=20, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=20, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTime', type='int', size=11, desc='本次登录在线时间'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTime', type='INT', size=10, desc='本次登录在线时间'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='int', size=11, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='int', size=11, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=20, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=20, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogin` (
`iEventId` varchar(61) COMMENT '游戏事件ID',
`iWorldId` int(11) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(20) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(11) COMMENT '角色等级',
`iRoleExp` bigint(20) COMMENT '角色经验值',
`iMoney` bigint(20) COMMENT '角色金币数',
`iLijin` bigint(20) COMMENT '角色绑钻数量',
`iGamePoints` bigint(20) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(11) COMMENT '角色总在线时长',
`iLoginWay` int(11) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleLevel', type='int', size=11, desc='角色等级'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleLevel', type='INT', size=10, desc='角色等级'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLijin', type='bigint', size=20, desc='角色绑钻数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLijin', type='BIGINT', size=19, desc='角色绑钻数量'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iMoney', type='bigint', size=20, desc='角色金币数'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iMoney', type='BIGINT', size=19, desc='角色金币数'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleId', type='bigint', size=20, desc='角色ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleId', type='BIGINT', size=19, desc='角色ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iLoginWay', type='int', size=11, desc='登录渠道'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iLoginWay', type='INT', size=10, desc='登录渠道'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iOnlineTotalTime', type='int', size=11, desc='角色总在线时长'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iOnlineTotalTime', type='INT', size=10, desc='角色总在线时长'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iWorldId', type='int', size=11, desc='游戏大区ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iWorldId', type='INT', size=10, desc='游戏大区ID'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iRoleExp', type='bigint', size=20, desc='角色经验值'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iRoleExp', type='BIGINT', size=19, desc='角色经验值'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:29:19 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iGamePoints', type='bigint', size=20, desc='角色钻石数量'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iGamePoints', type='BIGINT', size=19, desc='角色钻石数量'}
2018-12-14 16:31:10 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:31:10 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:31:10 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:31:11 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:31:11 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `shop` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iCost` bigint(19) COMMENT '支付消耗',
`iShopType` tinyint(11) COMMENT '商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等',
`iGoodsType` int(10) COMMENT '商品类型',
`iGoodsId` int(10) COMMENT '物品ID',
`iGoodsNum` int(10) COMMENT '物品数量',
`vGuid` varchar(60) COMMENT '全局唯一标识(暂时没用,空着)',
`iLoginWay` int(10) COMMENT '登录渠道',
`iNewCash` bigint(19) COMMENT '钻石余量',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iShopType', type='tinyint', size=11, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iShopType', type='TINYINT', size=3, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `goodsflow` (
`iEventId` varchar(60) COMMENT '操作ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vRoleName` varchar(60) COMMENT '角色名',
`vOperate` varchar(60) COMMENT '操作类型',
`iGoodsId` int(10) COMMENT '物品id',
`vGoodsName` varchar(60) COMMENT '物品名字',
`iCount` int(10) COMMENT '个数',
`iTotalCount` int(10) COMMENT '动作后的道具总个数',
`iIdentifier` int(10) COMMENT '标识 1是得到，2是失去',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `recharge` (
`iEventId` varchar(60) COMMENT '操作ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`iRoleId` bigint(19) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iRoleLevel` int(10) COMMENT '角色等级',
`vSN` varchar(64) COMMENT '流水号',
`ts` int(10) COMMENT '充值时间',
`iPayDelta` int(10) COMMENT '充值金额',
`iNewCash` bigint(19) COMMENT '元宝余量',
`vSubType` varchar(64) COMMENT '子类型',
`iLoginWay` int(10) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelevelup` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(10) COMMENT '角色等级',
`iRoleExp` bigint(19) COMMENT '角色经验值',
`iMoney` bigint(19) COMMENT '角色金币数',
`iLijin` bigint(19) COMMENT '角色绑钻数量',
`iGamePoints` bigint(19) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(10) COMMENT '角色总在线时长',
`iReason` int(10) COMMENT '升级原因',
`iLoginWay` int(10) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `createrole` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iLoginWay` int(10) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `moneyflow` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(10) COMMENT '角色等级',
`iMoneyBeforer` bigint(19) COMMENT '动作前的金钱数',
`iMoneyAfter` bigint(19) COMMENT '动作后的金钱数',
`iMoney` bigint(19) COMMENT '动作涉及的金钱数',
`iMoneyType` int(10) COMMENT '金钱的类型',
`iAction` int(10) COMMENT '动作,发生原因',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogout` (
`iEventId` varchar(60) COMMENT '游戏事件ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`dtLoginTime` datetime COMMENT '登录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTime` int(10) COMMENT '本次登录在线时间',
`iOnlineTotalTime` int(10) COMMENT '角色总在线时长',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(10) COMMENT '角色等级',
`iRoleExp` bigint(19) COMMENT '角色经验值',
`iMoney` bigint(19) COMMENT '角色金币数',
`iLijin` bigint(19) COMMENT '角色绑钻数量',
`iGamePoints` bigint(19) COMMENT '角色钻石数量',
`iLoginWay` int(10) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb createTableSql:CREATE TABLE IF NOT EXISTS `rolelogin` (
`iEventId` varchar(61) COMMENT '游戏事件ID',
`iWorldId` int(10) COMMENT '游戏大区ID',
`iUin` varchar(60) COMMENT '用户ID',
`dtEventTime` datetime COMMENT '记录时间, 格式 YYYY-MM-DD HH:MM:SS',
`iRoleId` bigint(19) COMMENT '角色ID',
`vClientIp` varchar(16) COMMENT '客户端所在ip',
`vRoleName` varchar(20) COMMENT '角色名',
`iJobId` tinyint(11) COMMENT '角色职业',
`iRoleLevel` int(10) COMMENT '角色等级',
`iRoleExp` bigint(19) COMMENT '角色经验值',
`iMoney` bigint(19) COMMENT '角色金币数',
`iLijin` bigint(19) COMMENT '角色绑钻数量',
`iGamePoints` bigint(19) COMMENT '角色钻石数量',
`dtCreateTime` datetime COMMENT '角色创建的时间',
`iOnlineTotalTime` int(10) COMMENT '角色总在线时长',
`iLoginWay` int(10) COMMENT '登录渠道',
`dt` varchar(20) COMMENT '记录时间日期'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:31:35 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:31:35 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:31:35 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:31:35 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iShopType', type='tinyint', size=11, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iShopType', type='TINYINT', size=3, desc='商店类型，消费类型 1为各种商店购买，2为其他消费如元宝一键扫荡等'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:31:35 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iJobId', type='tinyint', size=11, desc='角色职业'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iJobId', type='TINYINT', size=3, desc='角色职业'}
2018-12-14 16:32:30 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:32:30 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:32:30 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:32:31 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:32:31 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 16:32:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:49 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:33:49 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:33:49 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:33:50 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:33:50 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:33:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:52:46 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:52:47 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:52:47 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:52:47 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:52:47 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:52:47 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:53:23 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:419)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:11 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:55:11 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:55:11 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:55:11 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:55:11 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:55:11 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table dt add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:31 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table dt add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:35 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:55:35 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:55:35 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:55:36 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:55:36 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:55:36 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:43 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table shop add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:43 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table shop add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:43 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:48 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table goodsflow add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:48 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table goodsflow add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:48 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table recharge add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table recharge add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelevelup add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelevelup add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table createrole add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table createrole add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table moneyflow add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table moneyflow add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogout add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogout add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogin add dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:55:50 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogin add dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:44 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:57:44 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:57:44 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:57:45 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:57:45 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table shop add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table shop add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table goodsflow add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table goodsflow add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table recharge add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table recharge add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelevelup add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelevelup add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table createrole add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table createrole add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table moneyflow add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table moneyflow add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogout add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogout add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogin add ` dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:57:45 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogin add ` dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:45 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 16:59:45 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 16:59:45 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 16:59:45 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 16:59:45 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table shop add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table shop add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table goodsflow add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table goodsflow add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table recharge add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table recharge add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelevelup add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelevelup add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table createrole add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table createrole add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table moneyflow add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table moneyflow add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogout add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogout add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogin add `dt` varchar(20) COMMENT '记录时间日期;
2018-12-14 16:59:46 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogin add `dt` varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:420)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:01:29 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:01:29 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:01:29 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:01:29 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table shop add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table shop add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table goodsflow add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table goodsflow add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table recharge add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table recharge add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelevelup add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelevelup add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table createrole add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table createrole add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table moneyflow add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table moneyflow add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogout add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogout add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogin add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:01:29 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogin add dt varchar(20) COMMENT '记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:50 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:04:50 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:04:50 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:04:51 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:04:51 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table shop add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table goodsflow add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table recharge add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelevelup add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table createrole add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table moneyflow add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelogout add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelogin add dt varchar(20) COMMENT '记录时间日期;
2018-12-14 17:04:51 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''记录时间日期' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:424)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:06:17 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:06:17 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:06:17 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:06:17 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:06:17 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:06:18 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:18 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table shop add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:4
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table goodsflow add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:10282
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table recharge add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:6
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelevelup add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:1345
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table createrole add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:45
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table moneyflow add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:3844
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelogout add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:147
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb tf.getKey():dt
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelogin add dt varchar(20) COMMENT '记录时间日期';
2018-12-14 17:06:22 [main] DEBUG main.LogParser - tryCreateLogDb update:149
2018-12-14 17:08:41 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:08:42 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:08:42 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:08:42 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:08:42 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:08:59 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:08:59 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:08:59 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:08:59 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:08:59 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:08:59 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 17:08:59 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alert table rolelogin change iEventId iEventId varchar(61) COMMENT '游戏事件ID';
2018-12-14 17:08:59 [main] DEBUG main.LogParser - tryCreateLogDb e:{}
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alert table rolelogin change iEventId iEventId varchar(61) COMMENT '游戏事件' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1054)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1842)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1764)
	at main.LogParser.tryCreateLogDb(LogParser.java:425)
	at main.LogParser.<init>(LogParser.java:138)
	at main.Log2DBMain.main(Log2DBMain.java:25)
2018-12-14 17:09:50 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:09:50 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:09:50 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:09:51 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:09:51 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:09:51 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=61, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=60, desc='游戏事件ID'}
2018-12-14 17:09:51 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelogin change iEventId iEventId varchar(61) COMMENT '游戏事件ID';
2018-12-14 17:09:51 [main] DEBUG main.LogParser - tryCreateLogDb update:149
2018-12-14 17:09:57 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:09:57 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:09:57 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:09:57 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:09:57 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:10:24 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:10:24 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:10:24 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:10:25 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:10:25 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:10:25 [main] DEBUG main.LogParser - tryCreateLogDb tf.getValue():TableField{fieldName='iEventId', type='varchar', size=60, desc='游戏事件ID'}, dbTableFields.get(tf.getKey()):TableField{fieldName='iEventId', type='VARCHAR', size=61, desc='游戏事件ID'}
2018-12-14 17:10:25 [main] DEBUG main.LogParser - tryCreateLogDb alertSql.toString():alter table rolelogin change iEventId iEventId varchar(60) COMMENT '游戏事件ID';
2018-12-14 17:10:25 [main] DEBUG main.LogParser - tryCreateLogDb update:149
2018-12-14 17:15:18 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:15:18 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:15:18 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:15:19 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:15:19 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:15:47 [main] DEBUG main.LogParser - LogParser configDbName:dbdiabloconf,logDbName:dbdiabloyylog
2018-12-14 17:15:47 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(startDate):18-11-14 00:00:00
2018-12-14 17:15:47 [main] DEBUG main.LogParser - LogParser TimeUtils.printTime(endDate):18-12-15 00:00:00
2018-12-14 17:15:47 [main] DEBUG main.LogParser - loadPlatInfoFromDb platId:1
2018-12-14 17:15:47 [main] DEBUG main.LogParser - LogParser platFolder.getPath():C:\Users\Administrator\Documents\svr_log\1
2018-12-14 17:15:48 [main] DEBUG main.LogParser - initDisructor threadCount:8
2018-12-14 17:15:49 [main] DEBUG main.LogParser - LogParser 处理文件个数:452,入库文件个数:452, 耗时:2045
